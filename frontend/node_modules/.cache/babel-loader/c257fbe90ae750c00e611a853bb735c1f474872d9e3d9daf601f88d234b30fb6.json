{"ast":null,"code":"var _jsxFileName = \"D:\\\\Django learning\\\\Reacr-Django notes\\\\frontend\\\\src\\\\pages\\\\NotePage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useParams, useNavigate } from \"react-router-dom\";\nimport { ReactComponent as ArrowLeft } from '../assets/arrow-left.svg';\nimport { browserHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NotePage = ({\n  match,\n  history\n}) => {\n  _s();\n  const params = useParams();\n  let noteId = params.id;\n  const navigate = useNavigate();\n  let [note, setNotes] = useState(null);\n  useEffect(() => {\n    getNotes();\n  }, [noteId]);\n  let getNotes = async () => {\n    let response = await fetch(`/api/notes/${noteId}`);\n    let data = await response.json();\n    setNotes(data);\n  };\n  const updateNote = async () => {\n    try {\n      await fetch(`/api/notes/${noteId}/update/`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(note)\n      });\n      // Navigate back to the home page after updating the note\n      navigate('/');\n    } catch (error) {\n      console.error('Error updating note:', error);\n    }\n  };\n  let handleSubmit = () => {\n    updateNote();\n    navigate('/');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: [\"NotePage\", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"note-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(ArrowLeft, {\n          onClick: handleSubmit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 38\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Single Note\", noteId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      onChange: e => {\n        setNotes({\n          ...note,\n          'body': e.target.value\n        });\n      },\n      defaultValue: note === null || note === void 0 ? void 0 : note.body\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(NotePage, \"C2RlRRdxvW2BjSMbq5LBg4f0pmY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = NotePage;\nexport default NotePage;\nvar _c;\n$RefreshReg$(_c, \"NotePage\");","map":{"version":3,"names":["React","useState","useEffect","Link","useParams","useNavigate","ReactComponent","ArrowLeft","browserHistory","jsxDEV","_jsxDEV","NotePage","match","history","_s","params","noteId","id","navigate","note","setNotes","getNotes","response","fetch","data","json","updateNote","method","headers","body","JSON","stringify","error","console","handleSubmit","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","defaultValue","_c","$RefreshReg$"],"sources":["D:/Django learning/Reacr-Django notes/frontend/src/pages/NotePage.js"],"sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport { Link, useParams ,useNavigate } from \"react-router-dom\";\r\nimport {ReactComponent as ArrowLeft} from '../assets/arrow-left.svg'\r\nimport { browserHistory } from 'react-router'\r\n\r\nconst NotePage = ({match ,history}) => {\r\n    const params = useParams();\r\n    let noteId = params.id;\r\n    const navigate = useNavigate();\r\n\r\n    let [note,setNotes] = useState(null)\r\n\r\n    useEffect(() => {\r\n        getNotes()\r\n    },[noteId])\r\n\r\n    let getNotes= async() =>{\r\n        let response= await fetch(`/api/notes/${noteId}`)\r\n        let data=await response.json() \r\n        setNotes(data)\r\n    }\r\n\r\n\r\n    const updateNote = async () => {\r\n        try {\r\n          await fetch(`/api/notes/${noteId}/update/`, {\r\n            method: 'PUT',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(note),\r\n          });\r\n          // Navigate back to the home page after updating the note\r\n          navigate('/');\r\n        } catch (error) {\r\n          console.error('Error updating note:', error);\r\n        }\r\n      };\r\n\r\n    let handleSubmit =() =>{\r\n        updateNote()\r\n        navigate('/')\r\n    }\r\n\r\n\r\n  return (\r\n    <div className='note'>NotePage\r\n    <div className='note-header'><h3><ArrowLeft onClick={handleSubmit}></ArrowLeft></h3></div>\r\n        <h1>Single Note{noteId}</h1>\r\n        <textarea onChange={(e) => {setNotes({ ...note ,'body':e.target.value})}}defaultValue={note?.body}></textarea>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NotePage"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}